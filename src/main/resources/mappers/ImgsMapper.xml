<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="ImgsMapper">

    <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
    <resultMap id="imgsMap"
        type="kr.co.poppy.model.Imgs">
        <result property="imgsno"        column="imgsno" />
        <result property="imgname"        column="imgname" />
        <result property="imgext"       column="imgext" />
        <result property="imgpath"       column="imgpath" />
        <result property="imgsize"         column="imgsize" />
        <result property="imgtype"         column="imgtype" />
        <result property="regdate"         column="regdate" />
        <result property="editdate"       column="editdate" />
        <result property="goodsno"      column="goodsno" />
        <result property="bbsno"         column="bbsno" />
    </resultMap>
    
    <!-- 단일행 조회를 위한 기능 정의  -->
    <select id="selectItem"
        parameterType="kr.co.poppy.model.Imgs"
        resultMap="imgsMap">
        SELECT imgname, imgext, imgpath, imgsize, imgtype,
               regdate, editdate,
   			   goodsno, bbsno
        FROM imgs
        WHERE imgtype=#{imgtype} and imgsno=#{imgsno}
    </select>
    
    <!-- (상품 목록 갤러리(gal_lis) 게시판)다중행 조회를 위한 기능 정의 -->
    <select id="selectList"
        parameterType="kr.co.poppy.model.Imgs"
        resultMap="imgsMap">
		SELECT imgname, imgext, imgpath, imgsize, imgtype,
               regdate, editdate,
   			   goodsno, bbsno from imgs
		WHERE imgtype=#{imgtype} and goodsno in (
		SELECT goodsno from goods where cate1=#{cate1});
    </select>
    
    <!-- 데이터 저장을 위한 기능 정의 -->
    <insert id="insertItem"
        parameterType="kr.co.poppy.model.Imgs"
        useGeneratedKeys="true" keyProperty="imgsno">
        INSERT INTO imgs (
            imgname, imgext, imgpath, imgsize, imgtype, regdate, editdate, goodsno, bbsno
        ) VALUES (
            #{imgname}, #{imgext}, #{imgpath}, #{imgsize}, #{imgtype}, #{regdate}, #{editdate}, #{goodsno}, #{bbsno}
        )
    </insert>
    
    <!-- 데이터 삭제를 위한 기능 정의 -->
    <delete id="deleteItem"
        parameterType="kr.co.poppy.model.Imgs">
        DELETE FROM imgs WHERE imgsno=#{imgsno}
    </delete>
    
    <!-- 데이터 갱신을 위한 기능 정의 -->
   <update id="updateItem"
        parameterType="kr.co.poppy.model.Imgs">
        UPDATE imgs SET
            imgname=#{imgname}, imgext=#{imgext}, imgpath=#{imgpath}, imgsize=#{imgsize}, imgtype=#{imgtype}, regdate=#{regdate}, 
            editdate=#{editdate}, goodsno=#{goodsno}
        WHERE bbsno=#{bbsno}
   </update>
   
   <!-- 특정 상품을 참조하는 Imgs데이터를 모두 참조 해제한다. -->
   <update id="unsetGoods"
   		parameterType="kr.co.poppy.model.Goods">
   		UPDATE imgs SET goodsno=null WHERE goodsno=#{goodsno}
   </update>
   <!-- 특정 게시글을 참조하는 Imgs데이터를 모두 참조 해제한다. -->
   <update id="unsetBbs"
   		parameterType="kr.co.poppy.model.Bbs">
   		UPDATE imgs SET bbsno=null WHERE bbsno=#{bbsno}
   </update>
</mapper>