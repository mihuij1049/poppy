<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OrdersMapper">

	<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
	<resultMap id="ordersMap" type="kr.co.poppy.model.Orders">
		<result property="orderno" column="orderno" />
		<result property="odmsg" column="odmsg" />
		<result property="paytype" column="paytype" />
		<result property="odstatus" column="odstatus" />
		<result property="deliprice" column="deliprice" />
		<result property="regdate" column="regdate" />
		<result property="editdate" column="editdate" />
		<result property="memno" column="memno" />
		<result property="addrno" column="addrno" />
		<result property="odgcode" column="odgcode" />
		<result property="odgname" column="odgname" />
		<result property="odgprice" column="odgprice" />
		<result property="odgsale" column="odgsale" />
		<result property="odgqty" column="odgqty" />
		<result property="odgdoption" column="odgdoption" />
		<result property="goodsno" column="goodsno" />
		<result property="imgname" column="imgname" />
		<result property="imgext" column="imgext" />
		<result property="imgpath" column="imgpath" />
		<result property="imgtype" column="imgtype" />
	</resultMap>

	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem" parameterType="kr.co.poppy.model.Orders"
		resultMap="ordersMap">
		SELECT * FROM orders WHERE orderno=#{orderno};
	</select>

	<!-- 주문내역 다중행 조회를 위한 기능 정의 -->
	<select id="selectList" parameterType="kr.co.poppy.model.Orders"
		resultMap="ordersMap">
		SELECT Distinct o.orderno,
		o.odstatus, od.orderdetailno,
		o.regdate, od.odgcode,g.gcode, od.odgname, g.gname,od.odgprice,
		od.odgsale,
		od.odgqty,
		od.odgdoption, g.goodsno, i.imgname, i.imgext,
		i.imgpath,
		i.imgtype,
		g.goodsno FROM imgs i, goods g, orders o INNER
		JOIN
		orderdetail od ON o.orderno =
		od.orderno
		INNER JOIN cart c ON
		c.memno =
		o.memno
		INNER JOIN goodsdetail gd ON gd.gddetailno =
		c.gddetailno
		WHERE
		o.memno=1 AND i.imgtype = "A" AND od.odgcode=g.gcode
		AND
		i.goodsno=g.goodsno
		AND o.odstatus IN ("0", "1", "2", "3");
	</select>

	<!-- 취소/교환/반품내역 다중행 조회를 위한 기능 정의 -->
	<select id="selectList2"
		parameterType="kr.co.poppy.model.Orders" resultMap="ordersMap">
		SELECT Distinct
		o.orderno,
		o.odstatus, od.orderdetailno,
		o.regdate, od.odgcode,g.gcode,
		od.odgname, g.gname,od.odgprice, od.odgsale, od.odgqty,
		od.odgdoption, g.goodsno,
		i.imgname, i.imgext, i.imgpath, i.imgtype,
		g.goodsno
		FROM imgs i, goods
		g, orders o INNER JOIN orderdetail od ON o.orderno =
		od.orderno
		INNER
		JOIN cart c ON c.memno = o.memno
		INNER JOIN goodsdetail gd ON
		gd.gddetailno = c.gddetailno
		WHERE o.memno=1 AND i.imgtype = "A" AND
		od.odgcode=g.gcode AND i.goodsno=g.goodsno
		AND o.odstatus IN ("4", "5",
		"6");
	</select>

	<!-- 데이터 수 조회를 위한 기능 정의 -->
	<select id="selectCountAll"
		parameterType="kr.co.poppy.model.Orders" resultType="int">
		SELECT COUNT(*)
		FROM orders

		<where>
			<if test="memno != 0 and memno != ''">
				memno = #{memno}
			</if>
		</where>
	</select>

	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem" parameterType="kr.co.poppy.model.Orders"
		useGeneratedKeys="true" keyProperty="orderno">
		INSERT INTO orders (
		odmsg,
		paytype, odstatus, deliprice, regdate, editdate, memno, addrno
		) VALUES
		(
		#{odmsg}, #{paytype}, #{odstatus}, deliprice, now(), now(), #{memno},
		#{addrno}
		)
	</insert>

	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem" parameterType="kr.co.poppy.model.Orders">
		DELETE FROM orders WHERE
		orderno=#{orderno}
	</delete>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem" parameterType="kr.co.poppy.model.Orders">
		UPDATE orders SET
		odmsg=#{odmsg}, paytype=#{paytype}, odstatus=#{odstatus},
		deliprice=#{deliprice}, editdate=now()
		WHERE orderno=#{orderno};
	</update>
	<!-- 특정 멤버를 참조하는 주문 데이터를 모두 참조 해제한다. -->
	<update id="unsetMembers"
		parameterType="kr.co.poppy.model.Members">
		UPDATE orders SET memno=null WHERE memno=#{memno}
	</update>
	<!-- 특정 주소를 참조하는 주문 데이터를 모두 참조 해제한다. -->
	<update id="unsetAddress"
		parameterType="kr.co.poppy.model.Members">
		UPDATE orders SET addrno=null WHERE memno=#{memno}
	</update>
</mapper>