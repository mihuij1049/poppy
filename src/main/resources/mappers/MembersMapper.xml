<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MembersMapper">

<!-- Beans 클래스 이름과(id)과 패키지명(type)을 명시한다. -->
<resultMap type="kr.co.poppy.model.Members" id="membersMap">
<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
<result property="memno" column="memno" />
<result property="userid" column="userid" />
<result property="userpw" column="userpw" />
<result property="username" column="username" />
<result property="userphone" column="userphone" />
<result property="useremail" column="useremail" />
<result property="regdate" column="regdate" />
<result property="editdate" column="editdate" />
<result property="cartcnt" column="cartcnt" />
</resultMap>
<!-- 회원 가입을 위한 멤버테이블 INSERT -->
<insert id="add_members"
	parameterType="kr.co.poppy.model.Members"
	useGeneratedKeys="true" keyProperty="memno">
	INSERT INTO members(userid, userpw, username, userphone, useremail, regdate, editdate) 
	VALUES (#{userid}, #{userpw}, #{username}, #{userphone}, #{useremail}, #{regdate}, #{editdate});
</insert>
<!-- 특정 멤버의 정보를 수정 -->
<update id="edit_members"
	parameterType="kr.co.poppy.model.Members">
	UPDATE members SET userpw=#{userpw}, userphone=#{userphone}, useremail=#{useremail},
		editdate=now() WHERE memno=#{memno};
</update>
<!-- 회원탈퇴  -->
<delete id="delete_members"
	parameterType="kr.co.poppy.model.Members">
	DELETE FROM members WHERE memno=#{memno};
</delete>
<!-- 특정 회원의 정보 조회 -->
<select id="select_item"
	parameterType="kr.co.poppy.model.Members"
	resultMap="membersMap">
	SELECT *, (SELECT COUNT(cartno) FROM cart WHERE memno=#{memno}) AS cartcnt from members WHERE memno=#{memno};
</select>
<!-- 특정 회원의 정보 조회(로그인 확인) -->
<select id="login_members"
	parameterType="kr.co.poppy.model.Members"
	resultMap="membersMap">
	SELECT *, (SELECT COUNT(cartno) FROM cart c WHERE c.memno=m.memno) AS cartcnt from members m WHERE userid=#{userid} and userpw=#{userpw}
</select>
<!-- 특정 회원의 정보 조회(아이디 찾기) -->
<select id="findId_members"
	parameterType="kr.co.poppy.model.Members"
	resultMap="membersMap">
	SELECT * from members WHERE username=#{username} and useremail=#{useremail}
</select>
<!-- 특정 회원의 비밀번호 수정 (비밀번호찾기) -->
<update id="editPw_members"
	parameterType="kr.co.poppy.model.Members">
	UPDATE members SET userpw=#{userpw}, editdate=now() WHERE userid=#{userid} and username=#{username} and useremail=#{useremail}
</update>
<!-- 회원아이디 중복 조회(회원가입) -->
<select id="same_check"
	parameterType="kr.co.poppy.model.Members"
	resultMap="membersMap">
	SELECT userid, useremail from members 
	<where>
		<if test="userid != null and userid != ''">
		userid = #{userid}
		</if>
		<if test="useremail != null and useremail != ''">
		or useremail = #{useremail}
		</if>
	</where>
</select>
<!-- 회원 이메일 중복 조회(회원가입) -->
<!-- <select id="findId_members"
	parameterType="kr.co.poppy.model.Members"
	resultMap="membersMap">
	SELECT * from members WHERE username=#{username} and useremail=#{useremail}
</select> -->

<!-- 모든 회원의 정보조회 (관리자페이지용 같아서 일단 보류) -->
</mapper>