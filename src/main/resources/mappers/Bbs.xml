<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="BbsMapper">

    <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
    <resultMap id="bbsMap"
        type="kr.co.poppy.model.Bbs">
        <result property="bbsno"        column="bbsno" />
        <result property="bbstype"        column="bbstype" />
        <result property="bbstitle"       column="bbstitle" />
        <result property="bbscontent"       column="bbscontent" />
        <result property="qnasec"         column="qnasec" />
        <result property="qnapw"         column="qnapw" />
        <result property="rvlike"         column="rvlike" />
        <result property="regdate"       column="regdate" />
        <result property="editdate"      column="editdate" />
        <result property="memno"         column="memno" />
        <result property="goodsno"         column="goodsno" />
    </resultMap>
    
   <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectItem"
        parameterType="kr.co.poppy.model.Bbs"
        resultMap="bbsMap">
        SELECT bbsno, bbstype, bbstitle, bbscontent, qnasec, qnapw, rvlike,
               DATE_FORMAT(regdate, '%Y-%m-%d') AS regdate,
               DATE_FORMAT(editdate, '%Y-%m-%d') AS editdate,
   			   b.memno, username, userid, g.goodsno, gname, 
        FROM bbs b
        INNER JOIN members m ON b.memno=m.memno
        INNER JOIN goods g ON b.goodsno=g.goodsno;
        WHERE bbsno=#{bbsno}
    </select>

    <!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectList"
        parameterType="kr.co.poppy.model.Bbs"
        resultMap="bbsMap">
        SELECT bbsno, bbstype, bbstitle, bbscontent, qnasec, qnapw, rvlike,
               DATE_FORMAT(regdate, '%Y-%m-%d') AS regdate,
               DATE_FORMAT(editdate, '%Y-%m-%d') AS editdate,
   			   b.memno, username, userid, g.goodsno, gname, 
        FROM bbs b
        INNER JOIN members m ON b.memno=m.memno
        INNER JOIN goods g ON b.goodsno=g.goodsno;
        
        <where>
            <if test="name != null and name != ''">
                name LIKE concat('%', #{name}, '%')
            </if>
        </where>
        
        ORDER BY bbsno DESC
        
        <if test="listCount > 0">
            LIMIT #{offset}, #{listCount}
        </if>
    </select>
    
    <!-- 데이터 수 조회를 위한 기능 정의 -->
    <select id="selectCountAll"
        parameterType="kr.co.poppy.model.Bbs" resultType="int">
        SELECT COUNT(*)
        FROM bbs b
        INNER JOIN members m ON b.memno=m.memno
        INNER JOIN goods g ON b.goodsno=g.goodsno;
        
        <where>
            <if test="name != null and name != ''">
                name LIKE concat('%', #{name}, '%')
            </if>
        </where>
    </select>

    <!-- 데이터 저장을 위한 기능 정의 -->
    <insert id="insertItem"
        parameterType="kr.co.poppy.model.Bbs"
        useGeneratedKeys="true" keyProperty="bbsno">
        INSERT INTO bbs (
            bbstype, bbstitle, bbscontent, qnasec, qnapw, rvlike, regdate, editdate, memno, goodsno
        ) VALUES (
            #{bbstype}, #{bbstitle}, #{bbscontent}, #{qnasec}, #{qnapw}, #{rvlike}, #{regdate}, #{editdate}, #{memno}, #{goodsno}
        )
    </insert>

    <!-- 데이터 삭제를 위한 기능 정의 -->
    <delete id="deleteItem"
        parameterType="kr.co.poppy.model.Bbs">
        DELETE FROM professor WHERE bbsno=#{bbsno}
    </delete>

    <!-- 데이터 갱신을 위한 기능 정의 -->
    <update id="updateItem"
        parameterType="kr.co.poppy.model.Bbs">
        UPDATE bbs SET
            #{bbstype}, #{bbstitle}, #{bbscontent}, #{qnasec}, #{qnapw}, #{rvlike}, #{regdate}, #{editdate}, #{memno}, #{goodsno}
        WHERE bbsno=#{bbsno}
   </update>
</mapper>